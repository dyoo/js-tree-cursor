A Zipper data structure for JavaScript DOM trees and other tree-like
structures.

Danny Yoo (dyoo@hashcollision.org)


This library provides a functional interface to trees, using G\'erard
Huet's Zipper data structure.  See: http://en.wikipedia.org/wiki/Zipper_(data_structure)


Usage:

You can create a cursor into the DOM with this:

       var cursor = TreeCursor.domToCursor(document.body)

The cursor implements the following functions:

    cursor.down: -> cursor
    Move the cursor down to the first child.

    cursor.up: -> cursor
    Move the cursor up to the parent.

    cursor.left: -> cursor
    Move the cursor to the previous sibling.

    cursor.right: -> cursor
    Move the cursor to the next sibling.

    cursor.succ: -> cursor
    Move the cursor to the successor.

    cursor.pred: -> cursor
    Move the cursor to the predecessor.


along with predicates to make sure the motion is legal:

    cursor.canDown: -> boolean
    cursor.canUp: -> boolean
    cursor.canLeft: -> boolean
    cursor.canRight: -> boolean
    cursor.canSucc: -> boolean
    cursor.canPred: -> boolean